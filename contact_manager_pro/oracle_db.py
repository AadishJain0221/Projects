import oracledb
import os
from dotenv import load_dotenv

load_dotenv() #Load environment variables from .env

#Database credentials from .env



def connect_oracle_db():

    ora_user=os.getenv('ORACLE_USER')
    ora_pass=os.getenv('ORACLE_PASSWORD')
    ora_host=os.getenv('ORACLE_HOST')
    ora_port=os.getenv('ORACLE_PORT')
    ora_service=os.getenv('ORACLE_SERVICE_NAME')

    DSN=f"{ora_host}:{ora_port}/{ora_service}"
    
    conn=None
    try:
        conn=oracledb.connect(user=ora_user,password=ora_pass,dsn=DSN)
        print("Successfully connected to Oracle Database")
        return conn

    except oracledb.Error as e:
        error_obj,=e.args
        print(f"Error connecting to Oracle Database: {error_obj.message}")
        return None

#connects to Oracle and ensures CONTACTS table exists  
def init_oracle_db():
    conn=connect_oracle_db()

    if conn is None:
        print("Failed to connect to Oracle. Table initialization skipped")
        return
    
    cursor=None
    try:
        cursor=conn.cursor()
        create_table_contact="""
            CREATE TABLE CONTACTS(
                ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                NAME VARCHAR2(225) NOT NULL,
                PHONE VARCHAR2(50),
                EMAIL VARCHAR2(255)
            )"""
        
        cursor.execute(create_table_contact)
        conn.commit()
        print("Table 'CONTACTS' created successfully")

    except oracledb.Error as e:
        error_obj,=e.args

        if error_obj.code==955:
            print("Table 'CONTACTS' already exists")
        else:
            print(f"Error initializing table: {error_obj.message}")

    finally:
        if cursor :
            cursor.close()
        if conn:
            conn.close()

if __name__=="__main__":
    print("Running Oracle DB initialization...")
    init_oracle_db()